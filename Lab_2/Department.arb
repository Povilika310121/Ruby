class Department
    
    attr_accessor :name, :duties #attr_accessor геттер и сеттор одновременно
    attr_reader :phone_number
    def initialize(name, phone_number,  duties = [])
        @name = name
        self.phone_number = phone_number
        @duties = duties
    end

    def phone_number=(phone_number)
        if Department.check_phone?(phone_number)
          @phone_number = phone_number
        else raise ArgumentError.new("#{phone_number} не номер телефона!")
        end
    end

    def Department.check_phone?(phone_number)
        /\+7([.-]?)([0-9]{3})([.-]?)([0-9]{3})([.-]?)([0-9]{2})([.-]?)([0-9]{2})/ =~ phone_number
      end

    def add_duty(duty)
        @duties <<duty
    end

    def highligth(ind)
        @highligth_duty = ind - 1
    end

    def del_duties(ind)
        @duties.delete_at(ind-1)
    end

    def highligth_read()
        @duties[@highligth_duty]
    end

    def replace_highligth_duty(text)
        @duties[@highligth_duty] = text
    end

    def to_s
        if @duties.empty?
            s = "Name: #{@name}\nPhone: #{@phone_number}\n"
        else
            s = "Name: #{@name}\nPhone: #{@phone_number}\nDuties: \n"
            @duties.each_index { |i| s += "\t #{i+1}. #{@duties[i]}\n" } 
        end
        s + "\n"
    end

    def Department.read_from_txt(file_name)
        file = File.new(file_name + ".txt", "r")
        (file.read.split(/~\n/).map { |object_str| object_str.split(/\n/) }).map { |object| object = Department.new(object.shift, object.shift, object)}
        #shift возвращает элемент массива и удаляет его
    end
  
end

# vika = Department.new('Vika', '+7-901-013-42-31', )
# danna = Department.new("Danna", "+79009053535")
# vika.add_duty("сделать всю домашку")
# vika.add_duty("найти работу")
# vika.add_duty("выспаться")
# vika.highligth(3)
# vika.replace_highligth_duty("учиться всю ночь")
# puts vika, danna

p Department.read_from_txt("export").class.name
